var tipuesearch = {"pages": [{'title': 'About', 'text': '歡迎來到(41123208)朱家成的網站 \n \n  https://github.com/mdecycu/cmsite \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w4-w5', 'text': '本課程所謂個人網站, 即 github帳號.github.io, 可由使用者自行設定內容, 建議長期維護後可用於研究所推甄, 或求職時使用. \n 本課程所謂評分網站, 即 github帳號.github.io/cad2023, 內容及維護歴程資料將用於課程評分 \n 評分網站與倉儲: \n 2a cad2023 學員網站與倉儲連結 \n 2b cad2023 學員網站與倉儲連結 \n 學員展示用 IPv6 位址: \n 2a 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cada:: 班級名單序號 \n 2b 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cadb:: 班級名單序號 \n \n', 'tags': '', 'url': 'w4-w5.html'}, {'title': '檔案', 'text': 'Solid Edge零件檔 \n 檔案 \n', 'tags': '', 'url': '檔案.html'}, {'title': 'w11', 'text': '有關永動機運動模擬玩具 (perpetual motion simulator toy): \n CAD 零組件繪圖 \n 原型製作前的系統模擬與製程規劃 \n 如何學習 CoppeliaSim: \n 透過閱讀\xa0 https://mde.tw/pjcopsim \xa0中的 tutorial 與相關指令說明後, 實際操作測試並在個人網頁中記錄各項功能的使用方法. \n 進入 CoppeliaSim \xa0 Forum , 搜尋相關討論或發問. \n Arduino code to CoppeliaSim \xa0 展示. ( Horosim , \xa0 備份 ), 更早的 討論 . 虛實整合: \xa0 1 , \xa0 2 , \xa0 3 . \n 從既有討論串中學習: \xa0 1 , \n 了解與磁場模擬有關的研究: \xa0 1 \xa0 (需要下載密碼), \xa0 2 , \xa0 3 . \n 從 案例 中學習. \n 有關鋼球平衡台 (steel ball balancing platform): \n 有關虛實整合彈珠台 (cyber-physical pinball table) \n 心得 \n 本次的繪圖軟體我是使用Solid Edge，十分不熟悉找個斷面混層的時間都夠我去炸馬桶了，還有真的不知道是我的電腦卡還是軟體在搞我，總而言之言而總之，下次，不對沒有下次，我一定不會在選Solid Edge \n', 'tags': '', 'url': 'w11.html'}, {'title': '項目', 'text': 'Solid Edge \n', 'tags': '', 'url': '項目.html'}, {'title': 'pms', 'text': '平面上滾動的鋼球永動模擬器, 也算 perpetual motion simulator (pms) 中的一種: \n \n \n \n \n 從 這裡 可以取得支援 IPv6 網路協定的 \xa0 CoppeliaSim 與 ZMQ remote API Python 程式範例 , 請利用 Wink 製作執行此一範例程式的 操作影片檔 後, 放入個人網站中的 w12 頁面中 \n \n \n 從上列程式範例, 已知 \xa0 simAddForceAndTorque \xa0 可 對場景中物體的質心施力與施轉矩 , 而 \xa0 simAddForce \xa0 則可對場景中的物體 任一位置施力 , 此外利用 \xa0 simGetObjectPosition \xa0 可以在特定時間點取得物件位置, 請根據上列鋼球永動模擬器的場景與 ZMQ remote API Python 程式, 以 platform \xa0 圓孔上緣作為參考原點座標 , 延伸出一個足夠大小的 平面範圍 , 測試利用上述兩種施力函式, 在鋼球通過感測器時, 對鋼球施以不同大小的力或轉矩後, 進行鋼球在目標平面上的落點分析, 並設法依此 落點實驗, 找出能讓鋼球正好落在 platform 範圍的施力或轉矩大小 \n影片 \n \n \n 尚未開工 \n', 'tags': '', 'url': 'pms.html'}, {'title': 'w13', 'text': '利用 ChatGPT 對話所完成的 2a 座位排序程式 \n', 'tags': '', 'url': 'w13.html'}, {'title': 'exam', 'text': '請利用自選的電腦輔助設計套件建立\xa0 https://mde.tw/cadnote/content/pms.html \xa0 中的零組件 (尺寸與操控內容請自訂), 並加入感測器與適當的設計元件或機構, 說明預計如何令其在接上外部電源後, 能夠讓系統中的鋼球在軌道上進行永動模擬. \n', 'tags': '', 'url': 'exam.html'}, {'title': '零件圖', 'text': '\n 整體 \n \n 軌道 \n \n 底座 \n 心得 \n 本次作業我覺得最大的難題反而不是畫圖，反倒是模擬的部分，目前只能做到讓球動而已，感測器一直無法作動，模組也載好了，還是無法 \n 檔案 \n 模擬影片 \n \n', 'tags': '', 'url': '零件圖.html'}, {'title': 'w12', 'text': '\n \n \n 從 這裡 可以取得支援 IPv6 網路協定的 \xa0 CoppeliaSim 與 ZMQ remote API Python 程式範例 , 請利用 Wink 製作執行此一範例程式的 操作影片檔 後, 放入個人網站中的 w12 頁面中 \n \n \n 從上列程式範例, 已知 \xa0 simAddForceAndTorque \xa0 可 對場景中物體的質心施力與施轉矩 , 而 \xa0 simAddForce \xa0 則可對場景中的物體 任一位置施力 , 此外利用 \xa0 simGetObjectPosition \xa0 可以在特定時間點取得物件位置, 請根據上列鋼球永動模擬器的場景與 ZMQ remote API Python 程式, 以 platform \xa0 圓孔上緣作為參考原點座標 , 延伸出一個足夠大小的 平面範圍 , 測試利用上述兩種施力函式, 在鋼球通過感測器時, 對鋼球施以不同大小的力或轉矩後, 進行鋼球在目標平面上的落點分析, 並設法依此 落點實驗, 找出能讓鋼球正好落在 platform 範圍的施力或轉矩大小 \n 影片 \n \n \n 尚未開工 \n \n', 'tags': '', 'url': 'w12.html'}, {'title': '任務一', 'text': '請自選 CAD 套件, 依照下列圖示, 以能將此系統放在電腦桌上作為參考尺寸, 繪製所需的零組件, 並將各零組件檔案與畫面上傳至個人的 Onedrive, 或以 Onshape 上的公開連結展示所完成的資料. \n', 'tags': '', 'url': '任務一.html'}, {'title': 'Solid Edge', 'text': '\n S olid Edge \xa0 是一款經濟實惠、易於使用的軟體工具產品組合，能夠輕鬆應對三維設計、仿真、製造、資料管理等產品開發流程的各個方面。 \n \n 以下是參考onshape Perpetual Motion Simulator 並且使用Solid Edge所畫 \n \n 組合圖 \n \n 零件 \n 1.碗公 \n \n 2.大U桿件 \n \n 3.底座 \n \n 4.桿件 \n \n 球太單調了所以沒圖 \n', 'tags': '', 'url': 'Solid Edge.html'}, {'title': '馬達推動', 'text': '除了利用磁力吸引, 讓鋼球在軌道運動時能具備足夠動能返回圓形平台外, 另外一種設計是在鋼球 (或其他非鐵材質的圓球) 離開圓形平台孔洞之後, 設法利用隱藏式的馬達帶動機構, 以滾動方式加速圓球, 以便讓圓球返回平台. \n 有關馬達推動設計, 請參考: \xa0 https://www.instructables.com/Marblevator-Perpetual/ \xa0 或 這個影片 . \n 機電模擬系統: \n 下載 \xa0 CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z \xa0 (需要下載密碼) \n CoppeliaSim 使用者手冊 , \xa0 CoppeliaSim 4.3.0 使用手冊網站 \n \n', 'tags': '', 'url': '馬達推動.html'}, {'title': '課程總結', 'text': '自評分數:60 \n A: 是否按照進度明確標示倉儲的改版歷程(√) \n B: 是否根據 \xa0 IPv4 與 IPv6 \xa0 網路環境設定進行作法討論(√) \n C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作(√) \n D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考(√) \n E: 是否使用所分配的 CAD 套件完成 專案一零組件繪圖 , 並提供零組件下載(√) \n F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim(√) \n G: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬( ) \n H: 是否實際操作 \xa0 Triangle 軌道系統 的鋼球永動模擬( ) \n I: 是否完成 W15 的平面雙 U 迴路上的 鋼球永動系統繪圖、轉檔與系統模擬( ) \n J: 是否使用所分配的 CAD 套件完成 專案二 1D 平台零組件繪圖 , 並提供零組件下載(√) \n K: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬( ) \n L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 \xa0 PID 控制理論 進行資料收集與 ChatGPT 對答( ) \n', 'tags': '', 'url': '課程總結.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};